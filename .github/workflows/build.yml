name: Build PyQrack Wheels

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch (adjust if needed)

jobs:
  build_wheels:
    runs-on: ubuntu-latest  # Use a Linux runner
    strategy:
      matrix:
        platform:
          - manylinux_2_39_x86_64
          - manylinux_2_35_x86_64
          - linux_aarch64
          - linux_armv7l
          - manylinux2014_x86_64
          - macosx_10_4_universal2
          - win_amd64
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel

      - name: Prepare Build Environment (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Prepare Build Environment (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install visualstudio2022-workload-nativedesktop

      - name: Build Wheel
        run: |
          python setup.py bdist_wheel --plat-name=${{ matrix.platform }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/
